#!/bin/tcsh 

##############################################################################
#
# Identification:
#     A script to 
#
# Description:
#     This script 
#
# Option arguments: 
#
# |    (The bar stops next line from joining) 
#         Indented
#
# Examples (more to come):
#     blah blah blah
#
# Bugs/deficiencies
#
# Author:
#     Kobus Barnard 
#
##############################################################################

# Commnent out of date? We do not recurse currently, but we might get here from
# repo_syn_create? 
#
# We can get here in three ways. 1) The first pass through post-commit-src-3 due
# to SVN post-commit, and doing repo_sync_to_all; 2) The first pass through
# an external post commit script; and 3) Recurssing on either of those inside
# repo_sync_external_dir. 
#
setenv KJB_VERBOSE 
setenv KJB_VERBOSE_2

if (! $?REPO_SYNC_RECURSION_PREFIX) then 
    ${P_STDERR} "REPO_SYNC_RECURSION_PREFIX was not set entering repo_sync_with_external"
    setenv REPO_SYNC_RECURSION_PREFIX ""
    setenv IVI_OUTPUT_PREFIX "${REPO_SYNC_RECURSION_PREFIX}"
endif 

set time_str = `date '+%y-%m-%d-%H-%M'`
setenv REPO_SYNC_ARCHIVE_DIR "`pwd`/result_archive/${time_str}"

${KJB_MKDIR} "${REPO_SYNC_ARCHIVE_DIR}"
if (${status}) then
    ${P_STDERR} "${REPO_SYNC_RECURSION_PREFIX}Command failed in `pwd`"
    ${P_STDERR} "${REPO_SYNC_RECURSION_PREFIX}${KJB_MKDIR} ${REPO_SYNC_ARCHIVE_DIR}"
    exit 1 
endif

# The output from this script largely goes to
# /home/svn/src/hooks/repo-sync.log. So we want to grab any output along the
# way in case we need to send them via email out of band. 

set repo_sync_result_file = "repo_sync_with_external.res"

set repo_sync_proc_count = `ps -x | grep -c 'repo_sync'`

set repo_sync_max_proc =  100

if (${repo_sync_proc_count} > ${repo_sync_max_proc}) then
    echo "${REPO_SYNC_RECURSION_PREFIX}Script repo_sync_with_external counted more than ${repo_sync_max_proc} repo_sync processes." |& tee -a   ${REPO_SYNC_RECURSION_PREFIX}
    echo "${REPO_SYNC_RECURSION_PREFIX}Shutting down repo_sync until this is resolved."  |& tee -a  ${REPO_SYNC_RECURSION_PREFIX}
    echo "${REPO_SYNC_RECURSION_PREFIX}Reinstatement requires manual removal of /home/svn/src/hooks/DISABLE_REPO_SYNC."  |& tee -a  ${REPO_SYNC_RECURSION_PREFIX}
    ${KJB_TOUCH} /home/svn/src/hooks/DISABLE_REPO_SYNC
    set sync_status = 1 
else 
    echo " "
    echo "${REPO_SYNC_RECURSION_PREFIX}=================================================================================="  |& tee -a ${repo_sync_result_file}

    echo "${REPO_SYNC_RECURSION_PREFIX}Initiating execution of repo_sync_with_external $* at `date`" |& tee -a ${repo_sync_result_file}
    echo " "
    echo "${REPO_SYNC_RECURSION_PREFIX}KJB_SRC_PATH is: ${KJB_SRC_PATH}"
    echo "${REPO_SYNC_RECURSION_PREFIX}MAKE_SCRIPT_PATH is: ${MAKE_SCRIPT_PATH}"
    echo "${REPO_SYNC_RECURSION_PREFIX}P_STDERR is ${P_STDERR}"
    echo " "

    # echo "${REPO_SYNC_RECURSION_PREFIX}Script repo_sync_with_external counted ${repo_sync_proc_count} repo_sync processes."
# Commnent out of date? We do not recurse currently, but we might get here from
# repo_syn_create? 
    echo " "
    
    repo_sync_with_external_2 $*  |& tee -a ${repo_sync_result_file}

    set sync_status = ${status}

    echo "${REPO_SYNC_RECURSION_PREFIX}Script repo_sync_with_external_2 $* exited with status ${sync_status}" |& tee -a ${repo_sync_result_file}
endif 

if (${sync_status}) then
    set result_str =  "FAILED"
else 
    set result_str =  "SUCCEEDED"
endif  

if ($?REPO_SYNC_FORCE_MAIL) then
    set send_mail =  1
else if ($?REPO_SYNC_SKIP_MAIL) then 
    set send_mail =  0
else if (${sync_status}) then
    set send_mail =  1
else 
    # Testing for now.
    set send_mail =  1
endif  

# Debug.
set send_mail =  0

if (${send_mail}) then
    echo "${REPO_SYNC_RECURSION_PREFIX}Sending emails." 

    set repo_sync_emails_file = "/home/ivilab/ivilab/scripts/repo_sync_emails.txt"
    if (-e "${repo_sync_emails_file}") then
        set emails = `${KJB_CAT} ${repo_sync_emails_file} | grep -v '^ *#' | grep '@[a-zA-Z]'`
        echo "${REPO_SYNC_RECURSION_PREFIX}Found emails: ${emails}" 
    else
        set emails = "kobus@cs.arizona.edu"
        echo "${REPO_SYNC_RECURSION_PREFIX}Using default emails: ${emails}" 
        # To test
        # set emails = ""
    endif 
    
    set subject = "IVILAB script repo_sync_with_external ${result_str}."

    foreach email (${emails}) 
        echo "${REPO_SYNC_RECURSION_PREFIX}Sending mail to ${email} about ${result_str}" 
        mutt -s "${subject}" -- "${email}" < "${repo_sync_result_file}"
    end 
else 
    echo "${REPO_SYNC_RECURSION_PREFIX}Skipping emails." 
endif 

# Don't worry about the nest return code.  All output captured by this file has
# been "tee'd" so it should be somewhere else. 
${KJB_MV} ${repo_sync_result_file} ${REPO_SYNC_ARCHIVE_DIR}

echo "${REPO_SYNC_RECURSION_PREFIX}Completing script repo_sync_with_external $* with status ${sync_status} at `date`"
echo " "
echo "${REPO_SYNC_RECURSION_PREFIX}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
echo " "

exit ${sync_status}


