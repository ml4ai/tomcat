#!/bin/tcsh

# We are currently redirected to repo_sync.log. 

@ num_args = ${#argv}

set label_to_skip = ""

# We accept one optional argument.
if (${num_args} == 1) then
    set label_to_skip = "$1"
else if (${num_args} > 1) then
    ${P_STDERR} "Script post-commit-src-3 called with ${num_args} arguments."
    ${P_STDERR} "It needs either none or one."
    exit 1
endif 

# We do NOT do recursive calling at the moment, but keeping the infrastructure
# for logging, etc., in serviceable condition. 

if ($?EXTERNAL_DIR_VISIT_COUNT) then
    set external_dir_visit_count = ${EXTERNAL_DIR_VISIT_COUNT}
    @ external_dir_visit_count = ${external_dir_visit_count} + 1
    setenv EXTERNAL_DIR_VISIT_COUNT ${external_dir_visit_count}
    setenv REPO_SYNC_RECURSION_PREFIX "${REPO_SYNC_RECURSION_PREFIX}    "
else 
    setenv EXTERNAL_DIR_VISIT_COUNT 1 
    setenv REPO_SYNC_RECURSION_PREFIX ""
endif 

setenv IVI_OUTPUT_PREFIX "${REPO_SYNC_RECURSION_PREFIX}"

echo "${REPO_SYNC_RECURSION_PREFIX}=================================================================================="
echo "${REPO_SYNC_RECURSION_PREFIX}In script post-commit-src-3 at recursion level ${EXTERNAL_DIR_VISIT_COUNT} (`date`)" 
echo " "
echo "KJB_SRC_PATH is: ${KJB_SRC_PATH}"
echo "MAKE_SCRIPT_PATH is: ${MAKE_SCRIPT_PATH}"
echo "P_STDERR is ${P_STDERR}"
echo " "

if (${EXTERNAL_DIR_VISIT_COUNT} > 5) then
    ${P_STDERR} "${REPO_SYNC_RECURSION_PREFIX}Script post-commit-src-3 recursion level exceeds 5. Likely a bug."
    exit 1 
endif 

set repo_path = "/home/svn/src"
set exec_id = `whoami`

echo "${REPO_SYNC_RECURSION_PREFIX}repo_path: $repo_path"  
echo "${REPO_SYNC_RECURSION_PREFIX}exec_id: $exec_id" 
echo " "
echo "${REPO_SYNC_RECURSION_PREFIX}Changes according to svnlook: " 
/usr/bin/X11/svnlook changed  ${repo_path} | cat_stdin_with_prefix 
echo " "

set script_status = 0

if ($?FORCE_REPO_SYNC) then
    # For debugging
    set ivi_changed = 1
else
    # Unlike version one, we are not assuming anything about what directories
    # are subscribed to. 
    #                                                                     Remove flag, spaces
#     set include_after_changed = `/usr/bin/X11/svnlook changed  ${repo_path} | sed 's/^[^ ][^ ]*  *//' | grep -c '^include_after/'`
#     set include_before_changed = `/usr/bin/X11/svnlook changed  ${repo_path} | sed 's/^[^ ][^ ]*  *//' | grep -c '^include_before/'`
#     set lib_changed = `/usr/bin/X11/svnlook changed  ${repo_path} | sed 's/^[^ ][^ ]*  *//' | grep -c '^lib/'`
#     set Make_changed = `/usr/bin/X11/svnlook changed  ${repo_path} | sed 's/^[^ ][^ ]*  *//' | grep -c '^Make/'`
# 
#     if ((${include_after_changed}) || (${include_before_changed}) || (${lib_changed}) || (${Make_changed})) then
#         set ivi_changed = 1
#     else 
#         set ivi_changed = 0
#     endif 


      # Currently, if we get any non blank ouptut from 'svnlook changed', we assume that
      # there is a change that is possibly relevant. The alternative would be
      # to track all directories that we care about, which is less robust. 

      set ivi_changed = `/usr/bin/X11/svnlook changed  ${repo_path} | grep -c '[^ ]'`

endif 

if (${ivi_changed}) then 
    echo "${REPO_SYNC_RECURSION_PREFIX}The IVILAB src svn repo has changed, so we are executing repo_sync_to_all_externals." 

    # setenv REPO_SYNC_FORCE_VERIFY
    # setenv KJB_VERBOSE 

    repo_sync_to_all_externals ${label_to_skip}

    if (${status}) then
        # We do not 'tee' as we are running in the background
        echo "${REPO_SYNC_RECURSION_PREFIX}Script repo_sync_to_all_externals FAILED."

        set script_status = 1 
    else 
        echo "${REPO_SYNC_RECURSION_PREFIX}Script repo_sync_to_all_externals SUCCEEDED."
    endif 
else 
    echo "${REPO_SYNC_RECURSION_PREFIX}Script repo_sync_to_all_externals not run because the IVILAB svn repo has not changed." 
endif 

echo "${REPO_SYNC_RECURSION_PREFIX}Script post-commit-src-3 at recursion level ${EXTERNAL_DIR_VISIT_COUNT} DONE" 
echo "${REPO_SYNC_RECURSION_PREFIX}Execution finished at `date` with status ${script_status}." 
echo "${REPO_SYNC_RECURSION_PREFIX}#########################################################################################" 
echo " "


