#!/bin/csh 

##############################################################################
#
# Identification:
#     A script to 
#
# Description:
#     This script 
#
# Option arguments: 
#
# |    (The bar stops next line from joining) 
#         Indented
#
# Examples (more to come):
#     blah blah blah
#
# Bugs/deficiencies
#
# Author:
#     Kobus Barnard 
#
##############################################################################

# Intermediate script because we separate locking from redirection so that
# processes don't wait on a lock while holding a file.

@ num_args = ${#argv}

# We accept one optional argument.
if (${num_args} == 1) then
    set external_label = "$1"
else
    ${P_STDERR} "Script repo_sync_from_external called with ${num_args} arguments."
    ${P_STDERR} "It needs exactly one."
    exit 1
endif 

set script_status = 0

echo "==============================================================================" >>& /home/svn/src/hooks/post-commit-from-external.log
echo " " >>& /home/svn/src/hooks/post-commit-from-external.log
echo "In script repo_sync_from_external with argument $* at `date`." >>& /home/svn/src/hooks/post-commit-from-external.log
# whoami >>& /home/svn/src/hooks/post-commit-from-external.log
# id >>& /home/svn/src/hooks/post-commit-from-external.log
echo "Executing 'svn up /home/ivilab/ivilab/scripts'" >>& /home/svn/src/hooks/post-commit-from-external.log
svn up /home/ivilab/ivilab/scripts >>& /home/svn/src/hooks/post-commit-from-external.log
echo "Executing 'repo_sync_with_external from $*'" >>& /home/svn/src/hooks/post-commit-from-external.log
echo "Further output will be sent to /home/svn/src/hooks/repo_sync.log" >>& /home/svn/src/hooks/post-commit-from-external.log

if (! $?REPO_SYNC_RECURSION_PREFIX) then 
    setenv REPO_SYNC_RECURSION_PREFIX ""
    setenv IVI_OUTPUT_PREFIX "${REPO_SYNC_RECURSION_PREFIX}"
endif 

repo_sync_with_external from ${external_label} >>& /home/svn/src/hooks/repo_sync.log
set script_status =  ${status}

echo "Script 'repo_sync_with_external from $*' DONE at `date`." >>& /home/svn/src/hooks/repo_sync.log
echo "Status returned is ${script_status}" >>& /home/svn/src/hooks/repo_sync.log
echo "#########################################################################################"  >>& /home/svn/src/hooks/repo_sync.log
echo "  " >>& /home/svn/src/hooks/repo_sync.log

# This should OK even if there were issues. 
# if (! ${script_status)) then 
    # Initially we did this with a recursive call in repo_sync_external dir, but
    # this is cleaner. 
    #
    echo "Script repo_sync_from_external now executing 'post-commit-src-3'" >>& /home/svn/src/hooks/post-commit-from-external.log
    echo "Further output will be sent to /home/svn/src/hooks/repo_sync.log" >>& /home/svn/src/hooks/post-commit-from-external.log

    # We do not need to update the repo that we just updated from, so we provide
    # post-commit-src-3 with the label as an argument, which means that we skip
    # it.
    post-commit-src-3 ${external_label} >>& /home/svn/src/hooks/repo_sync.log
    set script_status =  ${status}

    echo "Script 'post-commit-src-3' finished with status ${script_status}" >>& /home/svn/src/hooks/post-commit-from-external.log
    echo "  " >>& /home/svn/src/hooks/post-commit-from-external.log
# endif 

echo "Script repo_sync_from_external with argument $* DONE at `date`." >>& /home/svn/src/hooks/post-commit-from-external.log
echo "  " >>& /home/svn/src/hooks/post-commit-from-external.log

exit ${script_status}


