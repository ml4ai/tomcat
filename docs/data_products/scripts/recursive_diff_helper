#!/bin/tcsh -f

set num_args = $#argv

if (${num_args} > 2) then
    set extra = "${argv[3-$#]}"
else 
    set extra = ""
endif 

# 
# Deal with file names that have characters like [ and ] in them.
#
set noglob 

#
# We cut down on the noise by skipping sub directories. We only block the most
# recent directory found on one of the system by not the other. This simple
# heuristic works because sub-dirs typically follow dirs in our file list. 
#
set skip_item = ""

if  ($?KJB_RDIFF_VERBOSE) then
    set rdiff_verbose = "${KJB_RDIFF_VERBOSE}"
else 
    set rdiff_verbose = 1 
endif 

set file_name="$<"

while ( "${file_name}" != "" )  
    set skip = `echo "${file_name}" | grep -c -e '.svn' -e '.rsync' -e 'Include_lines' -e '.DS_Store'`
    
    if ((! ${skip}) && ($?DIFF_IGNORE)) then
        foreach file_to_ignore (${DIFF_IGNORE})
            if ("${file_to_ignore}" == "${file_name}") then 
                set skip = 1
                break
            endif 
        end
    endif 

    if (! ${skip}) then
        if ("${skip_item}" != "")  then
            set head_str = `echo ${file_name} | grep "^${skip_item}/"`

            if ("${head_str}" != "") then
                set skip = 1
            endif 
        endif 
    endif 
        
    if (${skip}) then
        # Do nothing
    else if ((-l "${1}${file_name}") || (-l "${2}${file_name}")) then 
        if ( ! -l "${2}${file_name}") then
            if (-d "${2}${file_name}") then
                echo ${file_name} is a link in ${1} but a directory in ${2}. 
            else if (-e "${2}${file_name}") then
                echo ${file_name} is a link in ${1} but a file in ${2}. 
            else 
                echo ${file_name} is a link in ${1} but does not exist in ${2}. 
            endif 
        else if ( ! -l "${1}${file_name}") then
            if (-d "${1}${file_name}") then
                echo ${file_name} is a link in ${2} but a directory in ${1}. 
            else if (-e "${1}${file_name}") then
                echo ${file_name} is a link in ${2} but a file in ${1}. 
            else 
                echo ${file_name} is a link in ${2} but does not exist in ${1}. 
            endif 
        else 
            set link_1_to = `/bin/ls -l ${1}${file_name} | sed 's/^l.*-> //'`
            set link_2_to = `/bin/ls -l ${2}${file_name} | sed 's/^l.*-> //'`

            if ("${link_1_to}" != "${link_2_to}") then 
                echo ${file_name} links to ${link_1_to} in ${1} but ${link_2_to} in ${2}. 
            endif 
        endif 
    else if ((-d "${1}${file_name}") || (-d "${2}${file_name}")) then 
        if ( ! -d "${2}${file_name}") then
            if (-e "${2}${file_name}") then
                echo ${file_name} is a directory in ${1} but not in ${2}. 
                set skip_item = "${file_name}"
            else 
                echo ${file_name} is a directory in ${1} but does not exist in ${2}.
                set skip_item = "${file_name}"
            endif 
        else if ( ! -d "${1}${file_name}") then
            if (-e "${1}${file_name}") then
                echo ${file_name} is a directory in ${2} but not in ${1}. 
                set skip_item = "${file_name}"
            else 
                echo ${file_name} is a directory in ${2} but does not exist in ${1}.
                set skip_item = "${file_name}"
            endif 
        endif 
    else if ((-e "${1}${file_name}") && (-e "${2}${file_name}")) then 
        if (${rdiff_verbose} > 1) then
            echo "RDIFF_VERBOSE ${rdiff_verbose}: diff -b -B -q ${extra} ${1}${file_name} ${2}${file_name}"
        endif 

        diff -b -B -q ${extra} "${1}${file_name}" "${2}${file_name}" 
    else if (${rdiff_verbose} > 0) then
        if ((-e "${1}${file_name}") && (! -e "${2}${file_name}")) then
            echo "RDIFF_VERBOSE ${rdiff_verbose}: ${file_name} is only in ${1}"
        else if ((-e "${2}${file_name}") && (! -e "${1}${file_name}")) then
            echo "RDIFF_VERBOSE ${rdiff_verbose}: ${file_name} is only in ${2}"
        else 
            echo "RDIFF_VERBOSE ${rdiff_verbose}: ${file_name} does not exist in either ${1} or ${2} but at least one was reported by find."
            echo "RDIFF_VERBOSE ${rdiff_verbose}:     Presumably this is a case not handled by recursive_diff." 
        endif 
    endif 

    set file_name="$<"
end 
 
