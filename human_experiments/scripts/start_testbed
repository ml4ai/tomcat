#!/bin/bash

set -u

seconds_to_wait=300 # 5 minutes

if [[ -z ${1+x} ]]; then
  PADDING=""
else
  PADDING=$1
fi

__monitor_testbed_launch() {
  local log_path=$1
  local testbed_pid=$2
  local padding=$3

  echo -e "${padding}Waiting for launch..."

  # Wait till the log file actually exists
  while [ ! -f "$log_path" ]; do
    sleep 1
  done

  local num_seconds=0
  while [ $num_seconds -lt $seconds_to_wait ]; do
    if [[ -e "${log_path}" ]]; then
      success_line="$(grep -c 'Testbed successfully launched.' "$log_path")"
      error_line="$(grep -c 'ERROR.' "$log_path")"
      if [[ ${success_line} -ne 0 ]]; then
        return 0
      elif [[ ${error_line} -ne 0 ]]; then
        return 1
      fi
    else
      return 1
    fi

    # TODO - fix this because the process might end but the writer buffer
    # to the log file might still be running I guess
    if ! ps "$testbed_pid" >&/dev/null; then
      return 1
    fi

    sleep 1
    (( num_seconds++ ))
  done

  # Enough time has passes but the success message was not detected.
  return 1
}

__watch_for_trial_id() {
  ./watch_for_trial_id --exp_dir="$EXPERIMENT_DIR" &> "$EXPERIMENT_DIR/tmp/trial_id_watcher.log" &
  echo $! > "$EXPERIMENT_DIR/tmp/trial_id_watcher.pid"
}

__launch_testbed() {
  # Bring the testbed up and save logs
  local padding=$1
  local log_path="$EXPERIMENT_DIR/tmp/testbed_up.log"
  local testbed_launched="n"

  echo -e "${padding}Launching ${EMPH}Testbed${NC}..."
  while [[ $testbed_launched == "n" ]]; do
    pushd "$HOME/$SYSTEMS_DIR/testbed/Local" >/dev/null || exit 1
    ./testbed_up_core.sh -i &> "$log_path" &
    local testbed_pid=$!

    # Wait for a while to guarantee the log file was created
    sleep 1
    if __monitor_testbed_launch "$log_path" "$testbed_pid" "$padding "; then
      testbed_launched="y"
      echo -e "${padding}${GREEN} ${EMPH}Testbed${GREEN} successfully launched.${NC}"
    else
      text="${padding}${RED} Error while launching the ${EMPH}testbed${RED}. Check the log file in "
      text+="${EMPH}$log_path${RED} for more details.${NC}"
      echo -e "$text"
      echo -n -e "${padding} Press any key to ${EMPH}RETRY${NC}: "
      read -r
    fi
    popd >/dev/null || exit 1
  done

  __watch_for_trial_id
}

__launch_testbed "$PADDING"
