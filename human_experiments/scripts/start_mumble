#!/bin/bash

set -u

source configuration_helpers

if [[ -z ${1+x} ]]; then
  PADDING=""
else
  PADDING=$1
fi

__start_mumble_on_client() {
  local client_name=$1
  local client_address=$2
  local padding=$3

  if [[ $ALL -ne 1 ]]; then
    yes_no_question "${padding}Do you want to start ${EMPH}Mumble${NC} on ${EMPH}$client_name${NC}?"
    ans=$?
    padding="$padding "
  fi
  if [[ $ALL -eq 1 ]] || [[ $ans -eq 0 ]]; then
    # Start Mumble in a new desktop in the client machines
    echo -e "${padding}Opening ${EMPH}Mumble${NC} on ${EMPH}$client_name${NC}..."
    create_new_desktop_on_client $client_address
    ssh $EXPERIMENT_USER@$client_address "open -a Mumble" >/dev/null
    if [[ $? -eq 0 ]]; then
      echo -e "${padding} ${EMPH}Mumble${GREEN} successfully launched.${NC}"
    else
      echo -e "${padding} ${RED}Failed to launch the ${EMPH}Mumble${RED}.${NC}"
    fi
  fi
}

__start_mumble_on_client "lion" "lion.local" "$PADDING"
__start_mumble_on_client "tiger" "tiger.local" "$PADDING"
__start_mumble_on_client "leopard" "leopard.local" "$PADDING"

# The applescript does not work on the mumble interface and there's no
# available command-line option to establish the connection programmatically.
# Therefore, the process has to be done manually using a remote desktop client.
text="${PADDING}${YELLOW}Use ${EMPH}Remmina${YELLOW} to connect the client "
text+="machines to the server in the ${EMPH}Mumble${YELLOW} interface.${NC}"
echo -e "$text"
