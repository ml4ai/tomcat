#!/bin/bash

set -u

source wifi

USER_ON_TARGET="cat"
TARGET_IP="cat.local"

if [[ -z ${1+x} ]]; then
  PADDING=""
else
  PADDING=$1
fi

# We disable the WiFi in all of the clients to avoid issues with the fNIRS signals.
disable_wifi "lion" "lion.local" "$PADDING"
disable_wifi "tiger" "tiger.local" "$PADDING"
disable_wifi "leopard" "leopard.local" "$PADDING"

if [[ ${EXPERIMENT_DIR::1} != "/" ]]; then
  # In case the first character of experiment is not a slash '/'.
  text="\n${RED}First character of experiment directory must be a slash '/' !${NC}\n"
  text+="${YELLOW}Example: ./start_lab_recorder /data/cat/dry_runs/testing_2022_08_31_01\n"
  text+="(experiment directory must start with a slash '/' and not end with a slash.)${NC}\n"
  echo -e "$text"
  exit 1
fi

echo " "
echo -e "${YELLOW}WARNING: All prior instances of LabRecorder running on CAT will be killed!${NC}"
if ! yes_no_question "${YELLOW}DO YOU WANT TO CONTINUE?${NC}"; then
  echo " "
  echo -e "${RED}Starting LabRecorder - ABORTED!${NC}"
  echo " "
  exit 1
fi

# Set var to where the app LabRecorder path/app is located on CAT.
LAB_RECORDER_APP="/usr/LabRecorder/./LabRecorder"

# Set var to where the LabRecorder config directory is located on CAT.
CONFIG_DIR="\$HOME/$SYSTEMS_DIR/tomcat/human_experiments/config/LabRecorder_config"

# Set vars with Lion, Tiger and Leopard unique config path/file located on git.
CONFIG_FILE="${CONFIG_DIR}/LabRecorder_Block${EXPERIMENT_BLOCK}.cfg"
STORAGE_LOCATION="${EXPERIMENT_DIR}/lsl/block_${EXPERIMENT_BLOCK}.xdf"

echo " "
echo -e "Configuring LabRecorder's config files with data path/file:"
echo -e "${GREEN}${STORAGE_LOCATION}${NC}"

# Change (string find and replace) "StorageLocation=" line in Lion, Tiger and Leopards
# unique configuration files to have the Storage Location of the xdf file
# specified in this experiment.
ssh "$USER_ON_TARGET@$TARGET_IP" sed -i 's#StorageLocation=.*#StorageLocation='"$STORAGE_LOCATION"'#' "$CONFIG_FILE"

# Kill any prior instances of LabRecorder on CAT so that fresh instances can be opened.
ssh "$USER_ON_TARGET@$TARGET_IP" pkill LabRecorder

echo " "
echo -e "${YELLOW}Killed any prior instances of LabRecorder running on CAT!${NC}"


# Will need to open a new instance of LabRecorder to guarantee they are using
# correct config file, connecting to correct streams and using Experiment Dir
# and Data File for this Experiment.
echo " "
echo -e "Opening a new LabRecorder instance on CAT:"
# shellcheck disable=SC2029
ssh "$USER_ON_TARGET@$TARGET_IP" "DISPLAY=:1 ${LAB_RECORDER_APP} -c ${CONFIG_FILE} &>/dev/null &"
echo " "
ssh "$USER_ON_TARGET@$TARGET_IP" ps -F -C LabRecorder
echo " "

# After the LabRecorder is open on CAT, restore the modified LabRecorder config file
# back to what is on the main git repository using the "git checkout <file>" command.
# This is done so that git will not detect on any branch that the config files have been modified.
echo -e "Restoring the LabRecorder config file back to what is in the main git repository on CAT:"
#shellcheck disable=SC2029
ssh "$USER_ON_TARGET@$TARGET_IP" "cd ${CONFIG_DIR} && git checkout LabRecorder_Block${EXPERIMENT_BLOCK}.cfg"
echo " "

echo -e "${YELLOW}Verify that you have 1 LabRecorder window open on CAT and that it is recording the correct streams!${NC}"
echo " "
