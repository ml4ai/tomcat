#!/bin/bash

set -u

if [[ -z ${1+x} ]]; then
  PADDING=""
else
  PADDING=$1
fi

__start_on_client() {
  local client_name=$1
  local client_address=$2
  local player_name=$3
  local padding=$4

  local log_path="\$HOME/$EXPERIMENT_DIR/tmp/audio_streamer_$client_name.log"

  # We will use the process number to kill the streamer in the end of the experiment.
  local pid_path="\$HOME/$EXPERIMENT_DIR/tmp/audio_streamer_$client_name.pid"

  if [[ $ALL -ne 1 ]]; then
    yes_no_question "${padding}Do you want to start streaming on ${EMPH}$client_name${NC}?"
    ans=$?
    padding="$padding "
  fi
  if [[ $ALL -eq 1 ]] || [[ $ans -eq 0 ]]; then
    local audio_dir="$EXPERIMENT_DIR/$client_name/audio"
    if ! mkdir -p "$audio_dir"; then
      echo -e "${padding}${RED}Error when trying to create the folder ${audio_dir}.${NC}"
      exit 1
    fi

    local recordings_directory="\$HOME/$audio_dir"
    local command="cd \$HOME/$SYSTEMS_DIR/tomcat/exe/audioStreamer/build/; ./audioStreamer "
    command+="--use_mqtt true --ws_host tom.local --mqtt_host tom.local "
    command+="--player_name $player_name --save_audio true --recording_directory $recordings_directory "
    command+="&> $log_path &; echo \$! > $pid_path"
    # shellcheck disable=SC2029
    if ssh "$EXPERIMENT_USER@$client_address" "$command" >/dev/null; then
      echo -e "${padding}${EMPH}Audio Streamer${GREEN} started successfully.${NC}"
    else
      echo -e "${padding}${RED}Failed to start the ${EMPH}Audio Streamer${RED}.${NC}"
    fi
  fi
}

__start_audio_streamer() {
  local padding=$1

  source collect_participant_ids "$padding"
  echo -e "${padding}Starting the ${EMPH}Audio Streamer${NC}..."

  __start_on_client "lion" "lion.local" "$LION_PARTICIPANT_ID" "$padding "
  __start_on_client "tiger" "tiger.local" "$TIGER_PARTICIPANT_ID" "$padding "
  __start_on_client "leopard" "leopard.local" "$LEOPARD_PARTICIPANT_ID" "$padding "
}

__start_audio_streamer "$PADDING"
