#!/bin/bash

set -u

source configuration_helpers
source wifi

if [[ -z ${1+x} ]]; then
  # In case the script is executed standalone.
  text="${RED}Please provide an experiment directory as the first argument of "
  text+="the call to this script.${NC}"
  echo -e "$text"
  exit 1
fi
EXPERIMENT_DIR=$1

if [[ -z ${2+x} ]]; then
  PADDING=""
else
  PADDING=$2
fi

__start_sensor() {
  local client_address=$1
  local script_name=$2

  local command="osascript \$HOME/$SYSTEMS_DIR/tomcat/human_experiments/scripts/macos/$script_name"
  ssh $EXPERIMENT_USER@$client_address "$command" >/dev/null
  return $?
}

__start_eye_tracker() {
  local client_name=$1
  local client_address=$2
  local padding=$3

  local target_dir="$EXPERIMENT_DIR/$client_name/pupil_recorder"

  echo -e "${padding}Starting ${EMPH}Eye-tracker${NC} on ${EMPH}$client_name${NC}..."
  padding=" $padding"

  # Creating destination folder in the server
  if ! mkdir -p "$target_dir"; then
    echo -e "${padding}${RED}Error when trying to create the folder ${target_dir}.${NC}"
    exit 1
  fi

  # Creating a symbolic link between the local directory where recordings are stored and the directory in the server.
  yes_no_question "${padding}Do you want to update the symbolic link to the experiment directory?"
  if [[ $? -eq 0 ]]; then
    local command="\$HOME/$SYSTEMS_DIR/tomcat/human_experiments/scripts/create_pupil_symlink "
    command+="\$HOME/$target_dir"
    if ssh "$EXPERIMENT_USER"@"$client_address" "$command"; then
       echo -e "${padding}${GREEN} Symbolic link created successfully.${NC}"
    fi
  fi

  __start_sensor "$client_address" "launch_pupil_capture.scpt"
  if [[ $? -eq 0 ]]; then
    echo -e "${padding}${GREEN} ${EMPH}Eye-tracker${GREEN} system successfully launched.${NC}"
  fi
}

__start_sensors_on_client() {
  local client_name=$1
  local client_address=$2
  local padding=$3

  if [[ $ALL -ne 1 ]]; then
    yes_no_question "${padding}Do you want to start the systems on ${EMPH}$client_name${NC}?"
    ans=$?
    padding="$padding "
  fi
  if [[ $ALL -eq 1 ]] || [[ $ans -eq 0 ]]; then
    # Open sensors applications in a new desktop
    create_new_desktop_on_client $client_address

    __start_eye_tracker $client_name $client_address "$padding"
    disable_wifi $client_name $client_address "$padding"
  fi
}

__start_sensors_on_client "lion" "lion.local" "$PADDING"
__start_sensors_on_client "tiger" "tiger.local" "$PADDING"
__start_sensors_on_client "leopard" "leopard.local" "$PADDING"
