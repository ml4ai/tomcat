#!/bin/bash

set -u

FRAME_RATE=10

if [[ -z ${1+x} ]]; then
  PADDING=""
else
  PADDING=$1
fi

__start_recording() {
  local client_address=$1
  local script_name=$2
  local image_dir=$3

  local command="cd \$HOME/$SYSTEMS_DIR/tomcat/human_experiments/scripts/macos/; ./$script_name "
  command+="$image_dir $FRAME_RATE"
  # shellcheck disable=SC2029
  ssh "$EXPERIMENT_USER@$client_address" "$command" >/dev/null
  return $?
}

# TODO - remove this and call __start_recording if we can make the webcam streaming work with shell script.
__start_recording_with_applescript() {
  local client_address=$1
  local script_name=$2
  local image_dir=$3

  local command="cd \$HOME/$SYSTEMS_DIR/tomcat/human_experiments/scripts/macos/; osascript $script_name "
  command+="$image_dir $FRAME_RATE"
  # shellcheck disable=SC2029
  ssh "$EXPERIMENT_USER@$client_address" "$command" >/dev/null
  return $?
}

__start_face_recording() {
  local client_name=$1
  local client_address=$2
  local padding=$3

  local image_dir="$EXPERIMENT_DIR/$client_name/face_images"
  mkdir -p "$image_dir" >/dev/null

  echo -e "${padding}Starting ${EMPH}Face Recording${NC} on ${EMPH}$client_name${NC}..."
  if __start_recording_with_applescript "$client_address" "stream_webcam.scpt" "\$HOME$image_dir"; then
    echo -e "${padding}${GREEN} ${EMPH}Face Recording${GREEN} successfully started.${NC}"
  fi
}

__start_screen_recording() {
  local client_name=$1
  local client_address=$2
  local padding=$3

  local image_dir="$EXPERIMENT_DIR/$client_name/screenshots"
  mkdir -p "$image_dir" >/dev/null

  echo -e "${padding}Starting ${EMPH}Screen Recording${NC} on ${EMPH}$client_name${NC}..."
  if __start_recording "$client_address" "record_screen.sh" "\$HOME$image_dir"; then
    echo -e "${padding}${EMPH} Screen Recording${GREEN} successfully started.${NC}"
  fi
}

__start_ffmpeg_on_client() {
  local client_name=$1
  local client_address=$2
  local padding=$3

  if [[ $ALL -ne 1 ]]; then
    yes_no_question "${padding}Do you want to start recording on ${EMPH}$client_name${NC}?"
    ans=$?
    padding="$padding "
  fi
  if [[ $ALL -eq 1 ]] || [[ $ans -eq 0 ]]; then
    __start_face_recording "$client_name" "$client_address" "$padding"
    __start_screen_recording "$client_name" "$client_address" "$padding"
  fi
}

__launch_monitoring_program_cat() {
  local padding=$1
  if [[ $ALL -ne 1 ]]; then
    yes_no_question "${padding}Do you want to start image timestamp monitoring?"
    ans=$?
    padding="$padding "
  fi
  if [[ $ALL -eq 1 ]] || [[ $ans -eq 0 ]]; then
    echo -e "${padding} Starting ${EMPH}image timestamp monitoring program${NC}..."
    ssh cat@cat "~/Desktop/image_timestamp_scripts/start_image_timestamp.sh $EXPERIMENT_DIR"
    sleep 1
  fi
}

__launch_monitoring_program_cat "$PADDING"

__start_ffmpeg_on_client "lion" "lion.local" "$PADDING"
__start_ffmpeg_on_client "tiger" "tiger.local" "$PADDING"
__start_ffmpeg_on_client "leopard" "leopard.local" "$PADDING"
