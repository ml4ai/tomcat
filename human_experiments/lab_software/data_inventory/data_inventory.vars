#!/bin/bash

Color_Off='\033[0m'       # Text Reset

#Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White
Orange='\033[38;5;214m'   # Orange

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[47m'       # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green

# Blinking
Blink_Red='\033[31;5m'
Blink_Green='\033[32;5m'
Blink_Yellow='\033[33;5m'
Blink_Blue='\033[34;5m'
Blink_Purple='\033[35;5m'
Blink_Cyan='\033[36;5m'
Blink_White='\033[37;5m'
Blink_BRed='\033[31;5;1m'
Blink_BGreen='\033[32;5;1m'
Blink_BYellow='\033[33;5;1m'
Blink_BBlue='\033[34;5;1m'
Blink_BPurple='\033[35;5;1m'
Blink_BCyan='\033[36;5;1m'
Blink_BWhite='\033[37;5;1m'

# Font Effects
Bold='\e[1m'
Italic='\e[3m'
BItalic='\e[3m\e[1m'
Underline='\e[4m'
Strikethrough='\e[9m'

# Menu Colors
normal=`echo "\033[m"`
menu=`echo "\033[36m"` # Blue
number=`echo "\033[33m"` # yellow
bgred=`echo "\033[41m"`
fgred=`echo "\033[31m"`
msgcolor=`echo "\033[01;31m"` # bold red

# Symbols
Green_Check='\033[0;32m\U2713'  # ‚úì  Green Check Mark (Large)
Check_Mark='\u2714'             # ‚úî  Check Mark (small and cannot be colored in terminal)
Exclamtion='\u2755'             # ‚ùï White Exclamtion Mark (large and cannot be colored in terminal)
Red_Exclamtion='\u2757'         # ‚ùó Red Exclamtion Mark (large and cannot be colored in terminal)
Red_Question='\u2753'           # ‚ùì Red Question Mark (large and cannot be colored in terminal)
Red_X='\u274C'                  # ‚ùå Red X (large)
Red_x='\033[0;31m\u2718'        # ‚úò  Red x (small and can be colored in terminal)
Yellow_Yeild='\033[0;33m\U25BC' # ‚ñº  Yellow yeild sign (small and can be colored in terminal)
Yellow_Warn='\033[0;33m\U1D759' # ùùô  Yellow warning sign (small and can be colored in terminal)
Up_Triangle='\u2206'            # ‚àÜ  Up Open Triangle (small and can be colored in terminal)
Down_Triangle='\u2207'          # ‚àá  Down Open Triangle (small and can be colored in terminal)

# Config Helpers
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
EMPH="\033[35m" # Emphasize color: purple
NC="\033[0m"

yes_no_question() {
  local question="$1 [y/n]: "
  local ans=""
  while [[ "$ans" != "y" ]] && [[ "$ans" != "n" ]]; do
    echo -n -e "$question"
    read -r ans
  done

  if [[ $ans == "y" ]]; then
    return 0
  else
    return 1
  fi
}

wait_for_key() {
  local text="$1"
  local key="$2"

  local ans=""
  while [[ "$ans" != "$key" ]]; do
    echo -n -e "$text"
    read -r ans
  done
}

create_new_desktop_on_client(){
  local client_address=$1
  local command="osascript \$HOME/$SYSTEMS_DIR/tomcat/human_experiments/scripts/macos/new_desktop.scpt"
  ssh $EXPERIMENT_USER@$client_address "$command"
}
