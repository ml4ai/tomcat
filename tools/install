#!/bin/bash

set -u

# Set the TOMCAT environment variable, assuming that the directory structure
# mirrors that of the git repository.
TOMCAT="$(cd "$( dirname "${BASH_SOURCE[0]}" )/../" >/dev/null 2>&1 && pwd)"
export TOMCAT

###############################################################################

source ${TOMCAT}/tools/configuration_helpers
set_local_configuration

detect_ci
detect_os

__build_tomcat() {
    pushd "${TOMCAT}"
        echo "Building ToMCAT in `pwd`"

        /bin/rm -rf build
        mkdir build

        # Trying to set the correct version of Java.
        pushd build > /dev/null 
            if [[ $CI -eq 1 && $OSTYPE == "linux-gnu" ]]; then
                cmake ${TOMCAT} -DBoost_ARCHITECTURE=-x64\
                                -DBOOST_ROOT=$BOOST_ROOT_1_69_0
                if [[ $? -ne 0 ]]; then exit 1; fi
            else
                if ! cmake ${TOMCAT}; then exit 1; fi
            fi;

            if ! make -j; then exit 1; fi
            if ! make -j Minecraft; then exit 1; fi
        popd > /dev/null 
    popd > /dev/null 
}

__download_tomcat_data() {
    if ! ${TOMCAT}/tools/download/tomcat_worlds; then exit 1; fi

    # We do not download the OpenFace models when running on a CI runner to save
    # time.
    if [[ $CI -eq 0 && ! -d ${TOMCAT}/data/OpenFace_models ]]; then
        if ! ${TOMCAT}/tools/download/OpenFace_models; then exit 1; fi
    fi
}

_install_tomcat() {
    if ! ${TOMCAT}/tools/install_dependencies; then exit 1; fi
    __build_tomcat
    __download_tomcat_data

    echo " "
    echo "Finished installing ToMCAT in ${TOMCAT}!"
    echo " "
}

_install_tomcat
exit 0
