#!/bin/bash

# Default is to exit with failure. 
exit_status=1 

try=0
while [ $try -lt $num_tries ]; do 
    echo " "
    echo "Running the tutorial mission in ${TOMCAT}."
    echo " "

    ${TOMCAT}/build/bin/runExperiment --mission 0 \
      2> ${tutorial_mission_log} > /dev/null &
    bg_pid=$!
    echo "Running: ${TOMCAT}/build/bin/runExperiment --mission 0"
    echo "Process is $bg_pid - waiting for it"

    # Set up a background job to kill the mission if Minecraft dies.
    ${TOMCAT}/tools/kill_me_if_no_minecraft $bg_pid < /dev/null & 

    wait $bg_pid
    tutorial_mission_status=$?

    if [[ ${tutorial_mission_status} -eq 0 ]]; then
        tutorial_mission_status=`grep -c 'Error starting mission' ${tutorial_mission_log}`
    fi


    if [[ ${tutorial_mission_status} -eq 0 ]]; then
        exit_status=0 
        echo "Tutorial mission ended with success status."
        echo " "
        break
    fi 

    let try+=1 

    if [[ $try -lt $num_tries ]]; then 
        echo "Tutorial mission ended with failure status."
        echo "Killing all Minecraft and Malmo processes that can be found and trying again."
        ${TOMCAT}/tools/kill_minecraft
        ${TOMCAT}/tools/check_minecraft
    fi 
done
${RM} tutorial_saved_data.tgz
exit ${exit_status}

