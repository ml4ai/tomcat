#!/usr/bin/env bash

# Script to upload user data to the vision server.
set -u

# Set the TOMCAT environment variable, assuming that the directory structure
# mirrors that of the git repository.
TOMCAT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../" >/dev/null 2>&1 && pwd)"
export TOMCAT

export TOMCAT_TMP_DIR="/tmp/$USER/tomcat"
mkdir -p "${TOMCAT_TMP_DIR}"

data_upload(){

    local session_id=$1
    # Authentication file
    local auth_file="${TOMCAT}/conf/netrc"
    local web_address="http://vision.cs.arizona.edu/~tomcat/upload_file.php"
    local participant_data_folder="${TOMCAT}/data/participant_data"
    local session_folder="${participant_data_folder}/${session_id}"

	# First Create the zip file.

    # To maintain the directory structure and keep it simple, we cd into the
    # participant data folder and return back.
    pushd "$participant_data_folder" > /dev/null

        if [[ ! -f "${session_id}.zip" ]]; then
            echo "Compressing session folder: ${session_id}"
            echo "This may take a minute ..."
            if ! zip -q -r "${session_id}.zip" "${session_id}"; then
                echo "Creation of zip file failed. Exiting now."
                exit 1
            fi
        else
            echo "${session_id}.zip already exists!"
            echo "We will attempt to upload it now."
        fi
    popd > /dev/null

	# We can set an excryption flag and make this conditional.
	# if ENCRYPT_DATA; then ....
    if (( ${ENCRYPT_DATA:-0} )); then
        if ! "$TOMCAT"/tools/encrypt_session_data "$session_id"; then
            echo "Data encryption failed. Exiting now."
            exit 1
        fi
        # After data encryption script completes, we will obtain
        # encrypted zip file. ${session_folder}_encrypted.zip
        local zip_file="${session_folder}_encrypted.zip"
    else
        local zip_file="${session_folder}.zip"
    fi


    echo "Beginning data upload to vision server."

    curl_log="$TOMCAT_TMP_DIR"/vision_data_upload.log

    if [[ -f "${zip_file}" ]]; then
        if (( ${ENCRYPT_DATA:-0} )); then
            echo "Encrypted zip file created. Proceeding with data upload."
        else
            echo "Zip file created. Proceeding with data upload."
        fi
		echo "Uploading data to vision server. This may take a few minutes..."
    else
        echo "Error: Failed to create zip file."
        exit 1
    fi

    curl --netrc-file "$auth_file" -F "inputfile=@${zip_file}"\
        "$web_address" &> "$curl_log"
    if [[ $? -ne 0 ]]; then
        echo "The curl command to upload the data to the vision server "\
             "failed. See ${curl_log} for details."
        exit 1
    else
        echo "Data successfully uploaded to vision. You can access it at "\
             "http://vision.cs.arizona.edu/~tomcat/index.php"
    fi
}

data_upload $1
exit 0
# NOTE: Should include a cleanup script to handle errors and interrupts.
# Clean up should take care of cleaning random keys and intermediate files generated.
