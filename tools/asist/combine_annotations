#!/usr/bin/env python

# Script to combine annotations of incident commander inquiries from the Fall
# 2020 ASIST experiment.

import json
from pprint import pprint
import argparse
from glob import glob
import logging
from logging import debug, info, warning, error

# Set logging level
logging.basicConfig(level=logging.DEBUG)

parser = argparse.ArgumentParser()
parser.add_argument(
    "input_dir",
    help="Directory containing the annotation files (i.e. BORIS project files in JSON format)",
)

parser.add_argument(
    "output_file",
    help="Output file",
)

args = parser.parse_args()

# Summary statistics
stats = {
    "n_project_files": 0,
    "n_observations": 0,
    "n_video_files": 0,
}

class BorisProject(object):
    def __init__(self, filepath):
        debug(f"Processing file {filepath}")
        with open(filepath) as f:
            project = json.load(f)
            observations = project["observations"]
            debug(f"Number of observations: {len(observations)}")
            for label, observation in observations.items():
                stats["n_observations"] += 1
                debug(f"Processing observation '{label}'")
                media_files = observation["file"]["1"]
                for video_file_path in observation["media_info"]["length"]:
                    stats["n_video_files"] += 1
                    print("\t"+video_file_path)
        # Increment the number of project files processed.
        stats["n_project_files"] += 1

for filepath in glob(f"{args.input_dir}/*"):
    project = BorisProject(filepath)

logging.debug("Summary statistics")
logging.debug("------------------")
logging.debug(stats)
