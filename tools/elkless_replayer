#!/usr/bin/env python3

# ELKless Replayer is a simple program to replay messages from a file
# containing messages collected during a TA3 experimental trial and dumped from
# an Elasticsearch database.
# The script relies on the availability of the mosquitto_pub client executable.
# To see the command line arguments and invocation pattern, run
#     ./elkless_replayer -h

import sys
import json
import argparse
import subprocess as sp

if __name__ == "__main__":
    try:
        sp.run(
            ["command", "-v", "mosquitto_pub"], check=True, capture_output=True
        )
    except sp.CalledProcessError as e:
        sys.exit(
            "Could not find the mosquitto_pub client executable - "
            "please make sure it is installed."
        )

    parser = argparse.ArgumentParser(description="ELKless Replayer")
    parser.add_argument("input", help="The messages file to replay to the bus")
    parser.add_argument(
        "-p",
        "--port",
        type=int,
        help="Port that the mosquitto message broker is running on.",
        default=1883,
    )
    args = parser.parse_args()
    with open(args.input, "r") as f:
        for line in f:
            data = json.loads(line)
            for key in ("message", "@timestamp", "@version", "host"):
                del data[key]
            topic = data.pop("topic")
            try:
                sp.run(
                    [
                        "mosquitto_pub",
                        "-p",
                        str(args.port),
                        "-t",
                        topic,
                        "-m",
                        json.dumps(data),
                    ],
                    check=True,
                    capture_output=True,
                )
            except sp.CalledProcessError as e:
                sys.exit(
                    "Call to mosquitto_pub exited with return code "
                    + str(e.returncode)
                    + ".\n"
                    + "Please check if the mosquitto broker is up and running on port "
                    + str(args.port)
                    + "."
                )
